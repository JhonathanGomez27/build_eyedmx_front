{"version":3,"file":"common.346fe50b71414294.js","mappings":"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","sources":["./node_modules/rxjs/dist/esm/internal/firstValueFrom.js","./node_modules/ngx-autosize/fesm2020/ngx-autosize.mjs"],"sourcesContent":["import { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\nexport function firstValueFrom(source, config) {\n    const hasConfig = typeof config === 'object';\n    return new Promise((resolve, reject) => {\n        const subscriber = new SafeSubscriber({\n            next: (value) => {\n                resolve(value);\n                subscriber.unsubscribe();\n            },\n            error: reject,\n            complete: () => {\n                if (hasConfig) {\n                    resolve(config.defaultValue);\n                }\n                else {\n                    reject(new EmptyError());\n                }\n            },\n        });\n        source.subscribe(subscriber);\n    });\n}\n","import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Input, Output, HostListener, NgModule } from '@angular/core';\n\nclass WindowRef {\n    get nativeWindow() {\n        return window;\n    }\n}\nWindowRef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: WindowRef, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nWindowRef.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: WindowRef });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: WindowRef, decorators: [{\n            type: Injectable\n        }] });\n\nconst MAX_LOOKUP_RETRIES = 3;\nclass AutosizeDirective {\n    constructor(element, _window, _zone) {\n        this.element = element;\n        this._window = _window;\n        this._zone = _zone;\n        this.onlyGrow = false;\n        this.useImportant = false;\n        this.resized = new EventEmitter();\n        this.autosize = true;\n        this.retries = 0;\n        this._destroyed = false;\n        if (this.element.nativeElement.tagName !== 'TEXTAREA') {\n            this._findNestedTextArea();\n        }\n        else {\n            this.textAreaEl = this.element.nativeElement;\n            this.textAreaEl.style['overflow-y'] = 'hidden';\n            this._onTextAreaFound();\n        }\n    }\n    set minRows(value) {\n        this._minRows = +value;\n        if (this.textAreaEl) {\n            this.textAreaEl.rows = this._minRows;\n        }\n    }\n    ;\n    set _autosize(autosize) {\n        this.autosize = typeof autosize === 'boolean'\n            ? autosize\n            : true;\n    }\n    ;\n    onInput(textArea) {\n        this.adjust();\n    }\n    ngOnDestroy() {\n        this._destroyed = true;\n        if (this._windowResizeHandler) {\n            this._window.nativeWindow.removeEventListener('resize', this._windowResizeHandler, false);\n        }\n    }\n    ngAfterContentChecked() {\n        this.adjust();\n    }\n    ngOnChanges(changes) {\n        this.adjust(true);\n    }\n    _findNestedTextArea() {\n        this.textAreaEl = this.element.nativeElement.querySelector('TEXTAREA');\n        if (!this.textAreaEl && this.element.nativeElement.shadowRoot) {\n            this.textAreaEl = this.element.nativeElement.shadowRoot.querySelector('TEXTAREA');\n        }\n        if (!this.textAreaEl) {\n            if (this.retries >= MAX_LOOKUP_RETRIES) {\n                console.warn('ngx-autosize: textarea not found');\n            }\n            else {\n                this.retries++;\n                setTimeout(() => {\n                    this._findNestedTextArea();\n                }, 100);\n            }\n            return;\n        }\n        this.textAreaEl.style['overflow-y'] = 'hidden';\n        this._onTextAreaFound();\n    }\n    _onTextAreaFound() {\n        this._addWindowResizeHandler();\n        setTimeout(() => {\n            this.adjust();\n        });\n    }\n    _addWindowResizeHandler() {\n        this._windowResizeHandler = debounce(() => {\n            this._zone.run(() => {\n                this.adjust();\n            });\n        }, 200);\n        this._zone.runOutsideAngular(() => {\n            this._window.nativeWindow.addEventListener('resize', this._windowResizeHandler, false);\n        });\n    }\n    adjust(inputsChanged = false) {\n        if (this.autosize && !this._destroyed && this.textAreaEl && this.textAreaEl.parentNode) {\n            const currentText = this.textAreaEl.value;\n            if (inputsChanged === false &&\n                currentText === this._oldContent &&\n                this.textAreaEl.offsetWidth === this._oldWidth) {\n                return;\n            }\n            this._oldContent = currentText;\n            this._oldWidth = this.textAreaEl.offsetWidth;\n            const clone = this.textAreaEl.cloneNode(true);\n            const parent = this.textAreaEl.parentNode;\n            clone.style.width = this.textAreaEl.offsetWidth + 'px';\n            clone.style.visibility = 'hidden';\n            clone.style.position = 'absolute';\n            clone.textContent = currentText;\n            parent.appendChild(clone);\n            clone.style['overflow-y'] = 'hidden';\n            clone.style.height = 'auto';\n            let height = clone.scrollHeight;\n            // add into height top and bottom borders' width\n            let computedStyle = this._window.nativeWindow.getComputedStyle(clone, null);\n            height += parseInt(computedStyle.getPropertyValue('border-top-width'));\n            height += parseInt(computedStyle.getPropertyValue('border-bottom-width'));\n            if (computedStyle.getPropertyValue('box-sizing') === 'content-box') {\n                height -= parseInt(computedStyle.getPropertyValue('padding-top'));\n                height -= parseInt(computedStyle.getPropertyValue('padding-bottom'));\n            }\n            const oldHeight = this.textAreaEl.offsetHeight;\n            const willGrow = height > oldHeight;\n            if (this.onlyGrow === false || willGrow) {\n                const lineHeight = this._getLineHeight();\n                const rowsCount = height / lineHeight;\n                if (this._minRows && this._minRows >= rowsCount) {\n                    height = this._minRows * lineHeight;\n                }\n                else if (this.maxRows && this.maxRows <= rowsCount) {\n                    // never shrink the textarea if onlyGrow is true\n                    const maxHeight = this.maxRows * lineHeight;\n                    height = this.onlyGrow ? Math.max(maxHeight, oldHeight) : maxHeight;\n                    this.textAreaEl.style['overflow-y'] = 'auto';\n                }\n                else {\n                    this.textAreaEl.style['overflow-y'] = 'hidden';\n                }\n                const heightStyle = height + 'px';\n                const important = this.useImportant ? 'important' : '';\n                this.textAreaEl.style.setProperty('height', heightStyle, important);\n                this.resized.emit(height);\n            }\n            parent.removeChild(clone);\n        }\n    }\n    _getLineHeight() {\n        let lineHeight = parseInt(this.textAreaEl.style.lineHeight, 10);\n        if (isNaN(lineHeight) && this._window.nativeWindow.getComputedStyle) {\n            const styles = this._window.nativeWindow.getComputedStyle(this.textAreaEl);\n            lineHeight = parseInt(styles.lineHeight, 10);\n        }\n        if (isNaN(lineHeight)) {\n            const fontSize = this._window.nativeWindow.getComputedStyle(this.textAreaEl, null).getPropertyValue('font-size');\n            lineHeight = Math.floor(parseInt(fontSize.replace('px', ''), 10) * 1.5);\n        }\n        return lineHeight;\n    }\n}\nAutosizeDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: AutosizeDirective, deps: [{ token: i0.ElementRef }, { token: WindowRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nAutosizeDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.1\", type: AutosizeDirective, selector: \"[autosize]\", inputs: { minRows: \"minRows\", _autosize: [\"autosize\", \"_autosize\"], maxRows: \"maxRows\", onlyGrow: \"onlyGrow\", useImportant: \"useImportant\" }, outputs: { resized: \"resized\" }, host: { listeners: { \"input\": \"onInput($event.target)\" } }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: AutosizeDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[autosize]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: WindowRef }, { type: i0.NgZone }]; }, propDecorators: { minRows: [{\n                type: Input\n            }], _autosize: [{\n                type: Input,\n                args: ['autosize']\n            }], maxRows: [{\n                type: Input\n            }], onlyGrow: [{\n                type: Input\n            }], useImportant: [{\n                type: Input\n            }], resized: [{\n                type: Output\n            }], onInput: [{\n                type: HostListener,\n                args: ['input', ['$event.target']]\n            }] } });\nfunction debounce(func, timeout) {\n    let timer;\n    return (...args) => {\n        clearTimeout(timer);\n        timer = setTimeout(() => {\n            func(...args);\n        }, timeout);\n    };\n}\n\nclass AutosizeModule {\n}\nAutosizeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: AutosizeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAutosizeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: AutosizeModule, declarations: [AutosizeDirective], exports: [AutosizeDirective] });\nAutosizeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: AutosizeModule, providers: [\n        WindowRef\n    ], imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: AutosizeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [AutosizeDirective],\n                    imports: [],\n                    providers: [\n                        WindowRef\n                    ],\n                    exports: [AutosizeDirective]\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-autosize\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutosizeDirective, AutosizeModule, WindowRef };\n"],"names":["EmptyError","SafeSubscriber","firstValueFrom","source","config","hasConfig","Promise","resolve","reject","subscriber","next","value","unsubscribe","error","complete","defaultValue","subscribe","i0","Injectable","EventEmitter","Directive","Input","Output","HostListener","NgModule","WindowRef","nativeWindow","window","ɵfac","WindowRef_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","MAX_LOOKUP_RETRIES","AutosizeDirective","constructor","element","_window","_zone","onlyGrow","useImportant","resized","autosize","retries","_destroyed","nativeElement","tagName","_findNestedTextArea","textAreaEl","style","_onTextAreaFound","minRows","_minRows","rows","_autosize","onInput","textArea","adjust","ngOnDestroy","_windowResizeHandler","removeEventListener","ngAfterContentChecked","ngOnChanges","changes","querySelector","shadowRoot","console","warn","setTimeout","_addWindowResizeHandler","debounce","run","runOutsideAngular","addEventListener","inputsChanged","parentNode","currentText","_oldContent","offsetWidth","_oldWidth","clone","cloneNode","parent","width","visibility","position","textContent","appendChild","height","scrollHeight","computedStyle","getComputedStyle","parseInt","getPropertyValue","oldHeight","offsetHeight","willGrow","lineHeight","_getLineHeight","rowsCount","maxRows","maxHeight","Math","max","heightStyle","important","setProperty","emit","removeChild","isNaN","styles","fontSize","floor","replace","AutosizeDirective_Factory","ɵɵdirectiveInject","ElementRef","NgZone","ɵdir","ɵɵdefineDirective","selectors","hostBindings","AutosizeDirective_HostBindings","rf","ctx","ɵɵlistener","AutosizeDirective_input_HostBindingHandler","$event","target","inputs","outputs","features","ɵɵNgOnChangesFeature","args","selector","func","timeout","timer","clearTimeout","AutosizeModule","AutosizeModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","imports","declarations","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1]}